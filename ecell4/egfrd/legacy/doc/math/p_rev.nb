(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     32232,        688]
NotebookOptionsPosition[     31561,        662]
NotebookOutlinePosition[     31893,        677]
CellTagsIndexPosition[     31850,        674]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"NA", " ", "=", " ", 
   RowBox[{"6.0221367", " ", 
    RowBox[{"10", "^", "23"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Dtot", "=", " ", 
   RowBox[{"2", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "12"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"kd", "=", 
   RowBox[{"10", "^", "3"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigma", "=", 
   RowBox[{"5", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "9"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"kf", "=", 
   RowBox[{"10", " ", "*", " ", "sigma", " ", "*", " ", "Dtot"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kD", "=", 
   RowBox[{"4", "*", "Pi", "*", "sigma", "*", "Dtot"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"kf", "/", "kD"}]}], ")"}], "*", 
    RowBox[{
     RowBox[{"Sqrt", "[", "Dtot", "]"}], "/", "sigma"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"kd", "*", 
    RowBox[{
     RowBox[{"Sqrt", "[", "Dtot", "]"}], "/", "sigma"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"r0", "=", "sigma"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"tau", " ", "=", " ", 
   RowBox[{
    RowBox[{"sigma", "^", "2"}], " ", "/", " ", "Dtot"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", " ", 
   RowBox[{"tau", " ", 
    RowBox[{"10", "^", 
     RowBox[{"-", "2"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxr", " ", "=", " ", 
   RowBox[{
    RowBox[{"4.5", " ", 
     RowBox[{"Sqrt", "[", " ", 
      RowBox[{"6", " ", "Dtot", " ", "t"}], "]"}]}], "+", "sigma"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.4048615936709757`*^9, {3.404877873448547*^9, 3.404877975046054*^9}, {
   3.4048780265415277`*^9, 3.4048780480906477`*^9}, {3.404888602933188*^9, 
   3.40488860494455*^9}, {3.405111510979896*^9, 3.405111553260469*^9}, {
   3.4051116033126993`*^9, 3.405111606383926*^9}, {3.40529048075638*^9, 
   3.405290500578608*^9}, {3.405290539557836*^9, 3.405290579275263*^9}, {
   3.405290974201661*^9, 3.405291070904235*^9}, {3.405291209572825*^9, 
   3.405291226722455*^9}, {3.405291309350872*^9, 3.4052913386836042`*^9}, {
   3.405291406374434*^9, 3.40529143640485*^9}, {3.405291479367837*^9, 
   3.405291498365471*^9}, {3.4052918475474033`*^9, 3.405291852224893*^9}, {
   3.408744019660096*^9, 3.4087440199562063`*^9}, {3.408744137467126*^9, 
   3.408744159954822*^9}, {3.408744255268084*^9, 3.408744276866228*^9}, {
   3.408745017816289*^9, 3.4087450193818903`*^9}, {3.415225174722199*^9, 
   3.415225184054847*^9}, {3.415225266488965*^9, 3.415225266737973*^9}, {
   3.415225341213303*^9, 3.415225341995397*^9}, {3.415225446018668*^9, 
   3.415225446276045*^9}, {3.415225715236499*^9, 3.415225716039607*^9}, {
   3.415225813718596*^9, 3.415225814152122*^9}, {3.415225892041902*^9, 
   3.4152259221987953`*^9}, {3.422835745667426*^9, 3.422835746401618*^9}, {
   3.425243690640033*^9, 3.425243695774887*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"N", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "+", "y", "+", "z"}], "==", "h"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "*", "y"}], "+", 
          RowBox[{"y", "*", "z"}], "+", 
          RowBox[{"x", "*", "z"}]}], "==", "kd"}], ",", 
        RowBox[{
         RowBox[{"x", "*", "y", "*", "z"}], "==", "a"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"alpha", "=", 
   RowBox[{"sol", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"beta", " ", "=", " ", 
   RowBox[{"sol", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2", ",", "2"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"gamma", "=", 
   RowBox[{"sol", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "3", ",", "2"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4048615936709757`*^9, 3.404861604654194*^9}, {
  3.404861899874537*^9, 3.404861904484789*^9}, {3.4048743552352448`*^9, 
  3.404874359865491*^9}, {3.427223310921163*^9, 3.427223321719468*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"W", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"2", "*", "x", "*", "y"}], "+", 
      RowBox[{"y", "^", "2"}]}], "]"}], "*", 
    RowBox[{"Erfc", "[", 
     RowBox[{"x", "+", "y"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frac", "[", 
    RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "*", 
      RowBox[{"(", 
       RowBox[{"z", "+", "x"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"x", "+", "y"}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"z", "-", "x"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"x", "-", "y"}], ")"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"coeff", "[", "r_", "]"}], ":=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"4", "*", "Pi", "*", "r", "*", "r0", "*", 
      RowBox[{"Sqrt", "[", "Dtot", "]"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"term1", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"4", "*", "Pi", "*", "t"}], "]"}]}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "-", "r0"}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"4", "*", "Dtot", "*", "t"}], ")"}]}], "]"}], "+", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r", "+", "r0", "-", 
            RowBox[{"2", "*", "sigma"}]}], ")"}], "^", "2"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"4", "*", "Dtot", "*", "t"}], ")"}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"term2", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"frac", "[", 
     RowBox[{"alpha", ",", "beta", ",", "gamma"}], "]"}], "*", 
    RowBox[{"W", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "+", "r0", "-", 
         RowBox[{"2", "*", "sigma"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"4", "*", "Dtot", "*", "t"}], "]"}], ")"}]}], ",", 
      RowBox[{"alpha", "*", 
       RowBox[{"Sqrt", "[", "t", "]"}]}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"term3", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"frac", "[", 
     RowBox[{"beta", ",", "gamma", ",", "alpha"}], "]"}], "*", 
    RowBox[{"W", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "+", "r0", "-", 
         RowBox[{"2", "*", "sigma"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"4", "*", "Dtot", "*", "t"}], "]"}], ")"}]}], ",", 
      RowBox[{"beta", "*", 
       RowBox[{"Sqrt", "[", "t", "]"}]}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"term4", "[", "r_", "]"}], ":=", 
   RowBox[{
    RowBox[{"frac", "[", 
     RowBox[{"gamma", ",", "alpha", ",", "beta"}], "]"}], "*", 
    RowBox[{"W", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r", "+", "r0", "-", 
         RowBox[{"2", "*", "sigma"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"4", "*", "Dtot", "*", "t"}], "]"}], ")"}]}], ",", 
      RowBox[{"gamma", "*", 
       RowBox[{"Sqrt", "[", "t", "]"}]}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4048615936709757`*^9, 3.404861604654194*^9}, 
   3.404874105973494*^9, {3.422835722543302*^9, 3.422835722947648*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "r_", "]"}], ":=", 
  RowBox[{"4", "*", "Pi", "*", 
   RowBox[{"r", "^", "2"}], "*", 
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"coeff", "[", "r", "]"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"term1", "[", "r", "]"}], "+", 
       RowBox[{"term2", "[", "r", "]"}], "+", 
       RowBox[{"term3", "[", "r", "]"}], "+", 
       RowBox[{"term4", "[", "r", "]"}]}], ")"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.4048615936709757`*^9, 3.404861604654194*^9}, {
   3.404874105973494*^9, 3.404874109490901*^9}, 3.404874320311274*^9}],

Cell["c = N[Integrate[f[r], {r, 1, Infinity}]]   ", "Text",
 CellChangeTimes->{{3.4048615936709757`*^9, 3.404861604654194*^9}, {
  3.404874105973494*^9, 3.404874112337007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "r", "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"r", ",", "sigma", ",", "maxr"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4048615936709757`*^9, 3.404861604654194*^9}, {
  3.404874105973494*^9, 3.404874116130775*^9}, {3.404874246580364*^9, 
  3.4048742503747587`*^9}, {3.4048886414967613`*^9, 3.4048887183246*^9}, {
  3.404888763939973*^9, 3.404888764884252*^9}, {3.4051116239997063`*^9, 
  3.405111644533297*^9}, {3.405111704792223*^9, 3.405111712125307*^9}, {
  3.405290997792158*^9, 3.405291001093019*^9}, {3.41522568594156*^9, 
  3.415225686764699*^9}, {3.4152257225385733`*^9, 3.4152257252803507`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVV3k4lV8XFRKiRKkkSuZ5vAj7PedOiShEKirKkJkMGSoyy5yMlSEhIkMh
UUKGW0IkSX5pQCplSEL1vd9f91nPOXfvs9Ze65x7d9p7mjuws7GxMTnY2P7/
2XPceCoxUAv2qm29d5TViZ2jYqtdgrXA8o9JgGVvJ2Yv7whintOCK58L39EG
O7HmEm3t31AtmPqocOXvWCfOTNNXdI/RAs6vpf+mFjvxiS4lD+MMLagpfzqY
I9mFf393pchkaUGipeHIW7kunCpc+pc9Rwt4+9rRRpUu3HZSOqnhuhaMbr8q
fEy3C8v9FauUK9ICwRn3aAeTLjyrLjC75p4WHFXW1UVnuvClw6YNH2q14JDx
dsf2gC4sGRp/8VG9FuQVXq5DIV3YqptbKKBRC3T8wx9siOzCD5xWaY63asE+
s5wZyfQuHHF11q/thRbc6/NM56/twttbVSFvQAvE/ctuD9zvwrWfPbhCBrXg
j9HGB0lNXXiS8iVdY1gLPIyZdWNtXdik70NdwZgWGH3Y/WP+RRcW5nr5O/SH
FmQF/iob/NqFI2+gjohZLZC+5PpS9EcXnke302LmteDn+LW6g3NduD84XCV5
UQtG9mnkZv3uwskzag65bBR49oLyPGA1C/9LvKZ+g50CRmUyycbcLOyhyMNW
zEkBpcNdfwXWsrCJ07vsCm4KTH65/NZLgIV53yb2NglQYM/7l5ERIiwcGLR0
7bEgBU6eM0v5JMrCk5sdXZ9spIDafx5UHXEW7jA34OreQoHSNeGXq3exMOVH
SX+vCAW2tt5UH5Zi4aKEjfkDohQIVGzxm5Nh4YjOL3ojOyjQFrptYkmBhecc
DvG8k6BA52rJTZ+VWNieo3XwgyQFeE43jXeqsDCCbO8vshRohk1+thos/KfG
sHhJlQKZsi8Zw7os7GZ21/evOgU28ltmWOqx8Mi0OJVdiwKhK/uTWvRZuEHu
1wiPLgWO+N/08yZYWK7DvpRfjwJiHSUONYiFM089D9hgQIGQ4rP/xjEL++fe
FNyKKUDDtzR30Vn4k/6Gd6I0CnRNH3ihwGDhg8Mh5TsYFHjDayEmzWThtoDJ
IMk9FFA8zCkiuIeFNTYdNJTdS4EC4+727yQuqH60SdGYAhMrctKPDFlY8IDC
BxUTCvyWL9UN3cvCYd/SKzX2U+CG2gy7hhEL/4hjP69tRoFiztrwVyQ+Luth
rGdBgQ651iZ3YxZ+/uT1FsKSAtXVC9U/SQwnGePUQxS4RaE6eO5j4XK2qhrm
YQpsf1Y6OExi0euiYUZHKbC4ai+PjgkLx+vFmJraUuDTkOG/KBIvD81tMz9O
gf2Nnxs6SOzif/yzpR0FtILPwxKJXws9rT18kgJLyD1ezJSFDasoEbYOFGAl
qBRrkrjetMDMzokCgirmKfoklvnKL+5wmjy/tp8JhcTpsYFfnV0p8PqX8ehO
EnPJfLrv5k4B/PMq8x9Z36/tQLSXJwVi3+PY5yT+aNd40NebAl/TZW4lkfjc
m4Y5yzMUMLWy0zAksbDl/VRtPwoEzFd7zpP87jyvU9saQIFrImUn0khsaFjb
u3SWAvMfx7llSTz2+K7nSBAF0MgG1zukXkF6NesehlCA8/unWHkSC92rKs89
T4HnLgrOWaTet5Ur94WFUuDQz3ruFXI+jJKKL/YXKRAWecbDnMSjO8vj6BEU
0LcxvXqVnKfAptLONTEU0JUNtOEj530rscTpcyyZl96FeTXSH1TuYq6nl0j9
N/2wMyb9c2b5Bj0xiQIXy/a1H6axMJ9fwQfPFAqMvDRtM6WycOF03kWzyxR4
ROUt1Cb9ODh2rXljBgXc+COFPwELex69enwhkwJC3haVtwxYmPtl9t9X2eS6
4G9de9Lvuzsz9HOuk3mUDFO4Q+ajH6e/CcmjQE3TWDZNh8zLg7SgYwUUONy/
iecZhYWvV6TU7yyiwJRF/Ew9mS/2K5c0S8opYK3caM9B5jFnXVx/7B0KhBfY
6eiQedWMifFxraKAiaCDkp0cCzsGR1Yq36PAx/BnUUlk3rvsLijea6TA0Te/
fY5tJ/P85tzT9IcUoHbzPdLcxsJLB0NczjZToHbawfTfFhZWNAws0WujgLHd
8F7vjSycrHxGsuUpBerNtfS6eMm8lni33ugm810VJUsl76+WnV72kT1kXtcd
CL1D3m/zG93zDPvJfEwNhTuxsbD1sqNozzDp12EPd5OfXVi888jGkc8UUKky
j/050oW9zFjo7hcKFHXJcna+7sItw7ru8d8oMDDIV5U02IVPfdvSrj9DgdWZ
hnV/e7pwqeCrgGuL5Pw//xWyaenCFFuLN8fWaMPhbQ+ltt7swjHjLWu0ebSB
w7PDF+d34dee6prr12qDuv5Pi+PXunDIxQ0Jj9Zpg51t/ZvgK134cXEP7BDW
BmWRn491yPdk36xxwZikNgxJH7/cYd+Frwc/eH5fWhvYVEUmjI914e+cCssp
strAl3BWo/0w+d5t5j1IVdSGraMZfVcPdOFX+p2rb2how4z8408vDLqwfTT9
9CmqNqxiP57rLNyFA0UNVCeOawPhw93k3tyJ80SH7SbstOFJGN2V1tCJO0UD
Lk+c1IZRjk2n1t3txFu2Vy1MOGkD/ynhYxHFnbh2u1TTpKc2tH09lTqT0Iln
xfiNpi5ow9MvaRuHrTuxy863J7/lkv03mjGVJzrwEelzGXP/aYPk0mtxq8l2
XMZent03RtZXsZxyeNeOV0ZHrt35oA2c+9j7PYbacW6GfqHrhDYkXT4i7dbZ
jj9yr1R+mNaG6t7iz5tK2rH7lyBW/x9tcJH6nars2I5DK8/+qdmmA2KmrxIb
3j7Bxbt9T/oe0oEPyVLKfo1tOJizK2hhSAfcym/6rgi1YM9Gu+lt1rrgyp9S
sKbqIe45X9V+77ku/LIpe95Xdh/XLhybOrB/N0yuksofS7mLeQJbfU507Ibm
/baJeF8lZolYgXbXbmhTQ+uz9CtxfOMkz7qnu+Eil6nzb8VKLMC2Lv/B891w
Yq1k1QB/Jd4Sbd0jPLgbfvb4rnzJvYOlr3xT6P64G9KURuuflVVgatXmT7rs
erAwtH2bZN9tHPLZ9ZCQgR7M2mYRgha38EZ2RVlBQg9Eax0Pr6fcwrdFvi4K
YD0gdOkuEltv4RFjt+x1DD24t7bDN+6/EqxX4faWx0QPFldrEvbuJXjJx/0k
m60ezGy5NqiaUIwDVzw8v4XogX7DRzPG25vYf71PdEcjWa+dY2/XwwKsw/lE
rvChHlwldv33tKQA/17c/Cy0WQ/aMuW5xlILcMj7JoHdbXowtEZ+nupUgMPv
8WTffqoHdrfed34UKMDJR/NvpwzrwbZBsckcp3x8q7i37+iiHsgncrhWSeRh
l6u7fHWW9ODSqX0jy+vysGKKv/CmFT0Q4SmwrFzIxZVBokef/yPP114TF1+S
i2tNnD+iNfpAr97v9p0/F7fM/VuQEtaHyvsKwhb/XcMjhIroDw192Fewy1bp
ag72LbvTOq+lD/+kasyU/XMw32ZV19/a+rB1cP32QwdysN60agO7vj6sF2WN
i6/OwdlX1a030fVBg+MqV7xXNj70Wytt90F9mPJfkWo0zcIvqvX5In31wf7t
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
uVpj4F9dNC9oyIbPPlNKDzuBYbIpZ/vdZ3+Q9elFqwg7DIfqOn4eO/sH6XC1
bo62xxBpWObwRfIPWiSss+JPYWB7qYfyQldQYM3FqxnOGIo3fD9pQF1GQdmv
Csq9MCCd3Gzvr4so2DnszutQDOUBUq5beuaRTgJn3aswDKF9b+9Lps2j+aro
hy8vYnglXYh6Ds8jt+WE7r4IDO+fJDUvjs+hY4nZX7piMIjfjB/24Z5D6G6N
TEMyhkfEtrP3HWfQyhBFpT4Fwy7bWvqC5gy6/+c+pTYVQ1KeNFcDxwxS39PM
qE7DMOh3YG1fwQ+0a/jZydJMcl4Z/amqz78jLrbx3Ow8DOcv9E695f+GWiRP
F2fmY2jff4W+quErurD3a0V6AYarKdyneZ2+osXU2abUQgwaXOsG21q/oM9S
/97ElWA45Vvamx09hZ4Zb9kSXEn68eyU2RhlEqVkGCUfbSb5f42eSZX6iOzl
M0INH2P4srKuef/0B6TZ9MFLqwWD36Rc49W6D2jwfYjZ+jYMYuzC98aMPyAR
5TuCrR0YrKbUC2aC3qPCNqEr8j3kfMTzEMfsO+R36ETk5l5y/eSy7a7Wd4g5
dduPsw/D9/6DXx6mvUOf1zOtRl9g2Ns9G39S9x1SPnp2c+oguV9EeF2EwH+o
bmYk6/dbDM+Wz3OW+Y+gmAi5uPFRDE5mFy0YMiPoyGb/oP7/MMxuSi2qHnqD
VvTXHy0fI/Oz793GvwZvEIrBonafyHpi9+jigsOIJVZ0vfMrBrVOn+n+0Vfo
rbHnjYxlDGEKymY6f/qRSLZ5euYKBho1SKT9UT+ymtSKzfpD5lM7QpY7vB89
j1jxyPmHYfl8IC1/bT962BS7O5eDCnruZR9nJF+gPJXCvqK1VOi3CXX18u9F
I+ei24r5qDBquuJpT+tFW5651JXwU8GkrK3qi0AvSnFWu1a6ngo5k9Y5QUd7
0MX8h84VQlQQcdmxdGykG50Sev3v3jYq7B9kD/y44SnKs2ucrRWlQsnXZivN
JhYauZP7qW47FSqP/3cu7DQLWe5zfHpfnApCb2g+3E+6EDNyLr1pFxWMOS1F
QqI7kewvfuUnClSowoKMMu12dIoxs6NdkQrj0txeiTNPUN7lAaEOJSq0bFk2
Ztx+graq5vzuVKHCxumR65KSTxDvadknzzSoQGkteea8vQ19HabaDOhRYVJ4
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
enNGAnYR4tW1qJzEYlOf9nCe2EX8DyBmpy0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{5.*^-9, 0},
  PlotRange->NCache[{{
      Rational[1, 200000000], 1.051135192126215*^-8}, {0., 
     8.826698586420615*^8}}, {{5.*^-9, 1.051135192126215*^-8}, {0., 
    8.826698586420615*^8}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.4048886619160433`*^9, 3.404888720442975*^9}, 
   3.404888766918988*^9, 3.405111082053184*^9, {3.405111515403281*^9, 
   3.405111555967046*^9}, {3.405111609554332*^9, 3.405111645970693*^9}, {
   3.405111707506667*^9, 3.405111713866028*^9}, {3.405290519246442*^9, 
   3.405290584156764*^9}, {3.4052910105180063`*^9, 3.405291077104033*^9}, {
   3.4052912028584538`*^9, 3.405291230865542*^9}, {3.405291314418517*^9, 
   3.4052913394891787`*^9}, {3.40529141098709*^9, 3.405291440570752*^9}, {
   3.4052914903257923`*^9, 3.405291499627675*^9}, 3.4087442184350443`*^9, {
   3.4087442587257347`*^9, 3.408744279045892*^9}, 3.415225236968498*^9, 
   3.415225317852159*^9, 3.415225391816189*^9, 3.415225501818651*^9, 
   3.415225690573433*^9, 3.415225775279088*^9, 3.415225868886817*^9, {
   3.4272233174175787`*^9, 3.427223336083517*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"out", ":=", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"f", "[", "r", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "sigma", ",", "maxr", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"maxr", " ", "-", " ", "sigma"}], ")"}], " ", "/", " ", 
        "1000"}]}], "}"}]}], "]"}], " ", "//", " ", "N"}]}]], "Input",
 CellChangeTimes->{{3.4048615936709757`*^9, 3.404861604654194*^9}, {
  3.404874105973494*^9, 3.404874116130775*^9}, {3.4048781101179543`*^9, 
  3.4048781548155622`*^9}, {3.404878776189947*^9, 3.404878778776265*^9}, {
  3.4048887420736923`*^9, 3.404888776859552*^9}, {3.405111076501524*^9, 
  3.405111076966112*^9}, {3.40511218323569*^9, 3.405112186104389*^9}, {
  3.405291183395241*^9, 3.4052912015204687`*^9}, {3.4272233599223747`*^9, 
  3.427223373360552*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<p_rev.-2.tsv\>\"", ",", "out"}], "]"}]], "Input",
 CellChangeTimes->{{3.404874133716549*^9, 3.404874136756275*^9}, {
   3.4048742204013443`*^9, 3.404874231147789*^9}, {3.404879284090716*^9, 
   3.404879286232094*^9}, {3.40529050824999*^9, 3.405290576336187*^9}, {
   3.4052910484241037`*^9, 3.4052910754693003`*^9}, {3.405291205833249*^9, 
   3.4052912224066753`*^9}, {3.4052913348501453`*^9, 3.405291335440054*^9}, {
   3.40529143161164*^9, 3.405291431977108*^9}, {3.405291466723802*^9, 
   3.405291494785562*^9}, {3.4052918558158827`*^9, 3.405291856757249*^9}, {
   3.408744247082508*^9, 3.408744272472231*^9}, 3.415225244415017*^9, {
   3.4152254507322083`*^9, 3.41522545092986*^9}, {3.415225818657775*^9, 
   3.415225820167624*^9}, {3.4152258885663967`*^9, 3.4152258887445173`*^9}}],

Cell[BoxData["\<\"p_rev.-2.tsv\"\>"], "Output",
 CellChangeTimes->{
  3.4048615621934357`*^9, 3.404874234333146*^9, 3.404874292186165*^9, 
   3.404874334089143*^9, 3.40487436698604*^9, 3.4048780175352287`*^9, 
   3.404878050239038*^9, 3.404878159304014*^9, 3.404878735152384*^9, 
   3.404878782114973*^9, 3.40488861003449*^9, 3.40488879043157*^9, 
   3.4048889101626997`*^9, 3.40511108290154*^9, {3.4051115163409*^9, 
   3.405111556500448*^9}, 3.405111610007989*^9, 3.405111722295829*^9, 
   3.405112188204357*^9, {3.4052905195765057`*^9, 3.4052905859384604`*^9}, {
   3.405291027715942*^9, 3.405291077360937*^9}, {3.405291203100967*^9, 
   3.405291232167391*^9}, {3.405291315359473*^9, 3.405291339738237*^9}, 
   3.405291411251978*^9, 3.40529144136521*^9, {3.405291490832617*^9, 
   3.4052914999630947`*^9}, 3.408744218955242*^9, {3.408744259137398*^9, 
   3.408744279374352*^9}, 3.41522523751831*^9, 3.415225318101729*^9, 
   3.415225392124091*^9, 3.415225502160549*^9, 3.415225775689103*^9, 
   3.415225869261644*^9, {3.427223317796617*^9, 3.42722333630692*^9}}]
}, Open  ]]
},
WindowSize->{804, 973},
WindowMargins->{{Automatic, 39}, {25, Automatic}},
FrontEndVersion->"6.0 for Linux x86 (64-bit) (June 2, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[568, 21, 2967, 75, 275, "Input"],
Cell[3538, 98, 1266, 37, 99, "Input"],
Cell[4807, 137, 3641, 115, 275, "Input"],
Cell[8451, 254, 598, 15, 32, "Input"],
Cell[9052, 271, 176, 2, 31, "Text"],
Cell[CellGroupData[{
Cell[9253, 277, 687, 12, 32, "Input"],
Cell[9943, 291, 18755, 312, 231, "Output"]
}, Open  ]],
Cell[28713, 606, 899, 20, 32, "Input"],
Cell[CellGroupData[{
Cell[29637, 630, 840, 12, 32, "Input"],
Cell[30480, 644, 1065, 15, 31, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
